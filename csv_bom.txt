                          Embed program CSV_BOM
                            16 February 2023

csv_bom <.csv file name>

This program is used as one step in producing a bill of materials (BOM)
from a circuit board design using Eagle version 5 or later.  This program
is intended to be run by the BOM Eagle ULP.

The command line argument is intended to be the name of the CSV file
produced by the BOM ULP.  This should be "<name>_parts.csv", where NAME is
the Eagle board name.

The first line of the input file contains the names of each field.  These
are checked, and the program aborts with error if anything unexpected is
found.  This can be due to a version mismatch between the BOM ULP and this
program.

The output files will be written to the same directory as the input file.


This program performs several tasks:

  Reads parts reference

    A parts reference file, if available, is read.  This is used to fill
    in more information for each part from the reference file.

  Derives final part values

    The final description, value, and other fields are derived from the
    raw information such as the library name, device name, and various
    attributes.  See the EAGLE_ATTR documentation file for a description
    of the special attributes used in this process.

  Identifies common parts

    Common parts are identified and grouped on the same line of the BOM
    with the quantity field appropriately set.

  Cost equations

    Equations are written into the <name>_bom.tsv file to compute costs
    from the number of parts used, number of boards in a run, etc.

  Writes <name>_bom.tsv

    Intended for directly importing into a spreadsheet, like Microsoft
    Excel.  The spreadsheet will contain equations total parts and costs.
    Lines will be added to the end for activities like kitting and
    assembly, to facility computing overall cost of a run.

    Fields within a line are separated by TAB characters.  The first line
    contains the names of the columns.

  Writes <name>_bom.csv

    This is a more stripped-down BOM intended for reading by other
    programs.  It contains a title line with the column names, then one
    line for each unique part found.  This file contains no equations,
    just the bare BOM information.  Parts that are designated as critical
    for Intrinsic Safety (see IS attribute) will have a star ("*")
    appended to their designators.  For example, R31 might be the
    designator of a normal resistor, and R32* for a resistor critical to
    Intrisic Safety.

    Fields within a line are separated by unquoted commas.  This is a
    standard "comman-separated values" file.

  Writes <name>_parts.csv

    This file contains one line for each unique part found, in the format
    of a parts reference file.  The purpose is to provide templates for
    new parts to be added to a reference file.

    Fields within a line are separated by unquoted commas. The first line
    contains the names of each column.  This is a standard
    "comman-separated values" file.


The user steps in producing a BOM from an Eagle board or schematic are:

  1 - Run the BOM ULP in Eagle.

    This produces a .CSV (comma separate values) file with a separate line
    for each device used in the board.  The information includes such
    things as the part designator, library, package, and various
    attributes.  The detailed format of this file may change with
    different revisions of the BOM ULP and the CSV_BOM program.

    The BOM ULP then automatically runs CSV_BOM to produce a .TSV file
    with the BOM information.

  2 - Import the TSV file into a spread sheet program.

    The fields in the TSV file are delimited with tab characters.  CSV_BOM
    copies a template XLS file into the same directory as the CSV file.
    This template has the format for the columns already set appropriately
    for the data in the TSV file.  It is therefore best to open the
    template, then import the TSV file from there.

    In newer versions of Excel, this is done with the menu entry DATA >
    GET DATA > LEGACY WIZARDS > FROM TEXT (LEGACY).

  3 - Inspect the spreadsheet.

    If the manufacturer name, part number, and other relevant information
    is not present for a part, go back to the schematic, the Eagle library
    the part came from, or the parts reference file and add this
    information.

    In general, it is best to add missing information with the most global
    scope possible.  The three places such information can come from, in
    local to global order are:

      Library

      Parts reference file

      Schematic

    Repeat from step 1 until all possible information that can come from
    the schematic, parts reference file, or the libraries has been added
    to them.  Various Eagle attributes in library devices are used by the
    BOM generation utilities.  See the EAGLE_ATTR documentation file for a
    description of the special attributes.

    Note that LIBRARY > UPDATE ALL will need to be run in the schematic or
    board editor before changes in a library become visible.

  4 - Optionally add part costs to the BOM.

    The spreadsheet will automatically compute the parts cost for a board
    and a run of boards once the unit prices for each component are filled
    in.  The top left cell in the spreadsheet (A1) is the number of boards
    in a production run.  This effects the total quantity required for
    each part and the total cost of the run.

  5 - Optionally create lables for the kit.

    Labels for kitting can be produced from the spreadsheet.  See the
    BOM_LABELS program description for details.
